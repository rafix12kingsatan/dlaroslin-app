workflows:
  ios-capacitor-build:
    name: iOS Build (Capacitor)
    instance_type: mac_mini_m2

    environment:
      vars:
        NODE_OPTIONS: "--max_old_space_size=4096"
        DEVELOPMENT_TEAM: "XHY8V5C8YG"
        CM_CERTIFICATE_PASSWORD: "QH2wICnyE"
      node: lts
      xcode: latest

    scripts:
      - name: Check node and npm versions
        script: |
          node --version
          npm --version

      - name: Install dependencies
        script: |
          npm ci

      - name: Build Capacitor app
        script: |
          npx cap sync ios
          npx cap copy ios

      - name: Install CocoaPods
        script: |
          cd ios
          pod install
          cd ..

      - name: Setup code signing
        script: |
          echo "üîç Zawarto≈õƒá root katalogu i kilku podkatalog√≥w:"
          ls -R1 .

          # 1) Je≈õli nie masz gotowego rafal.p12, ale masz certificate.pem i mykey.key, to je po≈ÇƒÖcz:
          if [ ! -f rafal.p12 ] && [ -f certificate.pem ] && [ -f mykey.key ]; then
            echo "üîß Tworzƒô rafal.p12 z .pem + .key"
            openssl pkcs12 -export \
              -inkey mykey.key \
              -in certificate.pem \
              -certfile distribution.cer \
              -out rafal.p12 \
              -passout pass:"$CM_CERTIFICATE_PASSWORD"
          fi

          # 2) Importuj wszystkie pliki .p12
          echo "üîë Importowanie certyfikat√≥w (*.p12):"
          for cert in *.p12; do
            [ -f "$cert" ] && echo " ‚Üí import $cert" && \
              security import "$cert" \
                -P "$CM_CERTIFICATE_PASSWORD" \
                -T /usr/bin/codesign
          done

          # 3) Skopiuj wszystkie provisioning profiles z ca≈Çego drzewa
          echo "üì¶ Szukam i kopiujƒô provisioning profiles:"
          mkdir -p "$HOME/Library/MobileDevice/Provisioning Profiles"
          find . -type f -name "*.mobileprovision" | while read p; do
            echo " ‚Üí copy $p"
            cp "$p" "$HOME/Library/MobileDevice/Provisioning Profiles/"
          done

          # 4) Sprawd≈∫ finalnie katalog docelowy
          echo "‚úÖ Finalne provisioning profiles:"
          ls -1 "$HOME/Library/MobileDevice/Provisioning Profiles/"

      - name: Build & Archive
        script: |
          xcodebuild \
            -workspace ios/App.xcworkspace \
            -scheme App \
            -configuration Release \
            -archivePath "$CM_BUILD_DIR/App.xcarchive" \
            DEVELOPMENT_TEAM="$DEVELOPMENT_TEAM" \
            CODE_SIGN_STYLE=Automatic \
            -allowProvisioningUpdates \
            archive

      - name: Export IPA
        script: |
          xcodebuild \
            -exportArchive \
            -archivePath "$CM_BUILD_DIR/App.xcarchive" \
            -exportOptionsPlist ExportOptions.plist \
            -exportPath "$CM_BUILD_DIR"

    artifacts:
      - $CM_BUILD_DIR/*.ipa
      - /tmp/xcodebuild_logs/*.log

    publishing:
      email:
        recipients:
          - "rafix1278@gmail.com"
        notify:
          success: true
          failure: true
