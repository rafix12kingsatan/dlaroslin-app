apply plugin: 'com.android.application'

android {
    namespace "pl.dlaroslin.app"
    compileSdk 35  // Zaktualizowano na stałą wartość

    defaultConfig {
        applicationId "pl.dlaroslin.app"
        minSdk 23  // Zaktualizowano na stałą wartość
        targetSdk 34  // Zaktualizowano na stałą wartość
        versionCode 1
        versionName "1.0"
        // Usunięto testInstrumentationRunner i aaptOptions zgodnie z twoją konfiguracją
    }

    // Dodano konfigurację podpisywania
    signingConfigs {
        release {
            storeFile file("release-key.jks")
            storePassword "dlakrola89"
            keyAlias "mojklucz"
            keyPassword "dlakrola89"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release  // Dodano podpisywanie
            minifyEnabled false
            shrinkResources false  // Dodano zgodnie z konfiguracją
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'  // Zaktualizowano plik proguard
        }
        debug {
            // Konfiguracja debug (pozostawiona pusta)
        }
    }

    // Dodano konfigurację kompatybilności Java
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
}

repositories {
    flatDir{
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    implementation project(':capacitor-android')
    implementation project(':capacitor-cordova-android-plugins')  // Przeniesione dla zachowania kolejności
    
    // Usunięto zależności testowe zgodnie z twoją konfiguracją
}

apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}